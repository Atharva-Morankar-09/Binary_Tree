
GFG Link - https://practice.geeksforgeeks.org/problems/check-for-bst/1

1) 

class Solution
{
    public:
    void inOrder(Node* curr, vector<int>& v){
        if(curr!=NULL){
            inOrder(curr->left,v);
            v.push_back(curr->data);
            inOrder(curr->right,v);
        }
    }
    
    bool isBST(Node* root) 
    {
        vector<int> real,copy;
        inOrder(root,real);
        copy=real;
        sort(copy.begin(),copy.end());
        return copy==real;
    }
};

2)

class Solution
{
    public:
    //Function to check whether a Binary Tree is BST or not.
    int val=INT_MIN;
    bool isBST(Node* root) 
    {
        if(root==NULL){
            return true;
        }
        if(isBST(root->left)==false){
            return false;
        }
        if(val>=root->data){
            return false;
        }
        val=root->data;
        return isBST(root->right);
    }
};


