
Leetcode Link - https://leetcode.com/problems/maximum-width-of-binary-tree/

class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        int ans=0;
        if(root==NULL){return ans;}
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        while(!q.empty())
        {
            int s=q.size();
            int minn = q.front().second;
            int lef,righ;
            for(int i=0;i<s;i++)
            {
                long int store = q.front().second-minn;
                TreeNode* curr=q.front().first;
                q.pop();
                if(i==0){lef=store;}
                if(i==s-1){righ=store;}
                if(curr->left!=NULL)
                {
                    q.push({curr->left,2*store+1});
                }
                if(curr->right!=NULL)
                {
                    q.push({curr->right,2*store+2});
                }
            }
           ans = max(ans,righ-lef+1); 
        }
       return ans; 
    }
};
